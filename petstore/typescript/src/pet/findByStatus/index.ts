/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createPetFromDiscriminatorValue, type Pet } from '../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /pet/findByStatus
 */
export interface FindByStatusRequestBuilder extends BaseRequestBuilder<FindByStatusRequestBuilder> {
    /**
     * Multiple status values can be provided with comma separated strings
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Pet[]>}
     */
     get(requestConfiguration?: RequestConfiguration<FindByStatusRequestBuilderGetQueryParameters> | undefined) : Promise<Pet[] | undefined>;
    /**
     * Multiple status values can be provided with comma separated strings
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<FindByStatusRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Multiple status values can be provided with comma separated strings
 */
export interface FindByStatusRequestBuilderGetQueryParameters {
    /**
     * Status values that need to be considered for filter
     */
    status?: GetStatusQueryParameterType[];
}
export type GetStatusQueryParameterType = (typeof GetStatusQueryParameterTypeObject)[keyof typeof GetStatusQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const FindByStatusRequestBuilderUriTemplate = "{+baseurl}/pet/findByStatus?status={status}";
/**
 * Metadata for all the requests in the request builder.
 */
export const FindByStatusRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: FindByStatusRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "sendCollection",
        responseBodyFactory:  createPetFromDiscriminatorValue,
    },
};
export const GetStatusQueryParameterTypeObject = {
    Available: "available",
    Pending: "pending",
    Sold: "sold",
} as const;
/* tslint:enable */
/* eslint-enable */
